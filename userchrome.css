/********************************************************************************/
/* One Dark                                                                     */
/* Latest Version:  https://github.com/Mehvix/joplin-one-dark                   */
/* Created by:      Max Vogel (mehvix)                                          */
/*                                                                              */
/* userchrome.css:  For styling the entire Joplin app (except the rendered      */
/*                  Markdown, which is defined in `userstyle.css`)              */
/********************************************************************************/

/* TODO LIST 
 * make latex ($$) not change following text (if possible)
 * Fix weird boarders  
 * > border on >800px media title
 * Change cursor color to hue-2
 * Markdown support
 * Selection color fix
 * Sync options page
 * Fix other commented todo's
 * change strong color and katex colors
 * button hover
 * tag text color
 * triple list indent color (purple -> orange)
 * settings button colors
 *
 *
 * get image on github
 * Post on Joplin boards
 * Make PR to AwesomeJoplin repo
 * /

/* Variables */
:root {
    /* One Dark Values */
    /* https://github.com/atom/atom/blob/master/packages/one-dark-syntax/styles/colors.less */

    /* config */
    --hue: 220;
    --saturation: 13%;
    --brightness: 18%;

    /* monochrome */
    --mono-0: #e2ebfd;
    --mono-1: #abb2bf;
    --mono-2: #9ea6b6;
    --mono-3: #5c6370;
    --lighter-grey: #f2f2f2;
    --light-grey: #d9d9d9;

    /* hues */
    --hue-1: hsl(187, 47%, 55%);
    --hue-2: hsl(207, 82%, 66%);
    --hue-3: hsl(286, 60%, 67%);
    --hue-4: hsl(95, 38%, 62%);
    --hue-5: hsl(355, 65%, 65%);
    --hue-5-2: hsl(5, 48%, 51%);
    --hue-6: hsl(29, 54%, 61%);
    --hue-6-2: hsl(39, 67%, 69%);

    /* colors */
    --fg: var(--mono-1);
    --fg2: #4b5263;
    --bg-light: #282c34;
    --bg-dark: #21252b;
    --bg-darker: #1d1f23;
    --gutter: hsl(var(--fg), 100%, 26%);
    --guide: hsl(var(--fg), 100%, 15%);
    --accent: hsl(var(--hue), 100%, 66%);

    /* font */
    --font-sans: "PT Sans", sans-serif;
    --font-mono: "PT Mono", monospace;
    --font-size: 13px;
    --icon-size: var(--font-size);
    --font-weight-light: 200;
    --font-weight-base: 400;
    --font-weight-bold: 500;
    --font-line-height: 1.3em;

    /* misc. */
    --transition: 100ms;
}

/* Base Elements */
* {
    font-family: var(--font-sans) !important;
    font-weight: var(--font-weight-base) !important;
    line-height: var(--font-line-height) !important;
    color: var(--mono-1) !important;
}

body,
[style*="background-color: rgb(255, 255, 255);"],
[style*="background: rgb(255, 255, 255);"],
[style*="background-color: #ffffff"],
[style*="background: #ffffff"] {
    background-color: var(--bg-dark) !important;
}

/* tags */
.tag-list > [style*="rgb(244, 245, 246)"] {
    background-color: var(--hue-3) !important;
    color: var(--mono-0) !important;
}

.tag-list {
    padding: 0 !important;
}

/* notebook color */
[style*="background-color: #2D6BDC"] {
    background-color: var(--hue-2) !important;
}

/* options sidebar */
div#react-root
    > div
    > [style="display: flex; flex-direction: row;"]
    > div:first-of-type {
    background-color: var(--bg-dark) !important;
}

/* options main */
/* todo add exception for plugin toggler */
div#react-root
    > div
    > [style="display: flex; flex-direction: row;"]
    > div:nth-of-type(2)
    * {
    background-color: var(--bg-dark) !important;
}

/* setting plugin header */
div[class="sc-fzqAui cFptvu"] {
    background-color: var(--bg-darker) !important;
    color: var(--mono-0) !important;
    font-size: 16px;
    border: none !important;
}

/* warning sign */
div[style*="background-color: rgb(1, 63, 116)"] {
    background-color: var(--hue-5) !important;
    color: var(--mono-0) !important;
    border-radius: 3px;
}

/* restart text */
div[style*="background-color: rgb(1, 63, 116)"]
    a[style*="color: rgb(166, 166, 255)"] {
    color: var(--mono-0) !important;
    font-weight: 150%;
}

/* todo add hover? */
div#react-root
    > div
    > [style="display: flex; flex-direction: row;"]
    > div:nth-of-type(2)
    button,
div#react-root
    > div
    > [style="display: flex; flex-direction: row;"]
    > div:nth-of-type(2)
    select,
div#react-root
    > div
    > [style="display: flex; flex-direction: row;"]
    > div:nth-of-type(2)
    input,
div#react-root
    > div
    > [style="display: flex; flex-direction: row;"]
    > div:nth-of-type(2)
    button
    span {
    background-color: var(--bg-dark) !important;
    color: var(--mono-1);
}

/* todo mess w these? */
/* buttons w icons */
.fa,
.far,
.fas {
    font-weight: 900 !important;
    font-family: "Font Awesome 5 Free" !important;
    font-size: var(--icon-size) !important;
    background: none !important;
}

a.button:hover,
a.button:hover *,
button[title="New to-do"]:hover,
button[title="New note"]:hover,
button[title="New to-do"]:hover *,
button[title="New note"]:hover * {
    background-color: var(--hue-2) !important;
    color: var(--mono-0) !important;
    transition: var(--transition);
}

a.button,
a.button *,
button[title="New to-do"],
button[title="New note"],
button[title="New to-do"] *,
button[title="New note"] * {
    background-color: inherit;
    color: var(--mono-1) !important;
}

button[class="sc-fzomME hjqAGi"] {
    border: 1px solid rgba(221, 221, 221, 0.6) !important;
    border-radius: 3px;
}

/* Fix 'Add or Remove Tabs' opacity background */
[style*="z-index: 9999"][style*="background-color: rgba(0, 0, 0, 0.6)"] {
    height: 100% !important;
    width: 100% !important;
}

/* Make Input and Select Elements the Same Height as Buttons */
input,
select {
    height: 26px !important;
}

/* disabled buttons */
a.button.disabled {
    opacity: 0.3 !important;
}

/* Scroll bars */
::-webkit-scrollbar-thumb {
    background-color: var(--fg2) !important;
}

::-webkit-scrollbar {
    background-color: var(--gutter) !important;
    /* todo change to background of notes */
}

/* todo what does this do? */
.noteTextViewer {
    border-left: 1px solid var(--accent) !important;
}

/* Side bar */
div.rli-sideBar > div > div,
.rli-root > .rli-sideBar {
    background-color: var(--bg-dark) !important;
}

/* active tab in sidebar */
div[class~="xOaMI"],
div[class~="ccllyV"],
div[class~="eRzPp"],
div[class~="jwFCDv"],
div[class~="dRtIoh"] {
    background-color: var(--bg-darker) !important;
}

div.item-list.note-list .list-item-container:hover,
div[class~="ifkdBL"]:hover .side-bar .folders .list-item-container:hover,
div.folders div:hover {
    background-color: var(--bg-light) !important;
    transition: var(--transition) !important;
}

/* Sync button */
.rli-sideBar .side-bar > div:last-of-type button {
    background-color: var(--bg-darker) !important;
    transition: var(--transition);
    border: 0 !important;
}

.rli-sideBar .side-bar > div:last-of-type button:hover,
.rli-sideBar .side-bar > div:last-of-type button:hover * {
    background-color: var(--hue-5) !important;
    transition: var(--transition);
    color: var(--mono-0) !important;
}

/* removes border between side bar and note list */
.rli-root > .rli-sideBar > div {
    width: 100% !important;
}

/* removes border between note list and editor */
.rli-root > .rli-noteList > div > div > div:nth-of-type(2) {
    border: 0 !important;
}

/* Note list */
.rli-noteList,
.rli-noteList > div {
    background-color: var(--bg-dark) !important;
}

div.item-list.note-list {
    background-color: var(--bg-dark);
}

/* removes border between note items */
.note-list.item-list div::before {
    border: 0 !important;
}

/* border between notes and editor */
.rli-noteList {
    border-right: 4px solid var(--bg-dark) !important;
}

/* todo fix */
/* selected open note */
.gMzoUi, .jCscHS
/* search open note */
.eBdNXc {
    background-color: var(--bg-darker) !important;
}

/* Search */
.rli-root > .rli-noteList > div > div > div {
    background-color: var(--bg-dark);
}

input[placeholder="Search..."] {
    background-color: var(--bg) !important;
    border-width: 0 !important;
    color: var(--mono-3) !important;
    /* max-width: 9ch !important; corresponding to length of placeholder */
    /* font-size: 90% !important; */
    font-family: var(--font-mono) !important;
    transition: var(--transition);
}

input[placeholder="Search..."]:focus {
    outline: var(--hue-3) auto 1px !important;
    color: var(--mono-1) !important;
    background-color: var(--bg3) !important;
    transition: var(--transition);
}

/* Selects `No notes in here. Create one by clicking on "New note".` */
div[style="padding: 10px; font-size: 12px; color: rgb(50, 55, 63); background-color: rgb(255, 255, 255); font-family: Roboto;"] {
    background-color: var(--bg-dark) !important;
}

/* note title */
div.rli-editor > div > div > div > div > input {
    height: fit-content !important;
    background: var(--bg-dark) !important;
    padding: 4px !important;
    min-height: 0 !important;
    border-radius: 3px !important;
}

div.rli-editor > div > div > div > div > input,
div.rli-editor > div > div > div > div > div > span,
a[title="Spell checker"] {
    font-family: var(--font-mono) !important;
    font-size: 13px !important;
}

/* add tag */
div.rli-editor > div > div > div > div:nth-of-type(4) span {
    font-size: 11px !important;
}

div.rli-editor > div > div > div > div:nth-of-type(4) {
    margin: 0.25em 0.5em !important;
    height: fit-content !important;
}

/* editor */
.rli-editor {
    background-color: var(--bg-light) !important;
}

.rli-editor > div > div > div > div:nth-of-type(2) > div > div:nth-of-type(2) {
    padding-top: 0 !important;
}

.rli-editor > div > div:empty {
    background-color: var(--bg-light) !important;
    opacity: 1 !important;
}

.rli-editor .editor-toolbar {
    background-color: var(--bg-light) !important;
}

.CodeMirror-scroll {
    background-color: var(--bg-light) !important;
    color: var(--mono-0) !important;
}

.codeMirrorEditor * {
    font: var(--font-mono) !important;
}

.ace_cursor {
    color: pink !important;
    background-color: pink !important;
}

/* border between editor and render */
iframe.noteTextViewer {
    border-left: 2px solid var(--bg-dark) !important;
}

/* prevents double border when render-only */
div[style*="position: relative; display: flex; flex: 1 1 0%; border-left: 1px none rgb(221, 221, 221);"]
    > iframe.noteTextViewer {
    border: 0 !important;
}

/* This Rich Text editor has a number of limitations and ... */
.rli-editor div div div div[style*="rgb(255, 208, 141);"] {
    margin: 6px 12px 12px 12px !important;
    background-color: var(--bg-dark) !important;
}

/* tag-adder div */
.rli-editor div div div [style*="padding-left: 8px"] {
    padding-left: 12px !important;
}

/* note properties */
.note-property-box {
    margin: 0.25em 0 !important;
}

.note-property-box > label {
    width: 7em !important;
}

.note-property-box > label::after {
    content: ": ";
}

/* title */
[style="background-color: rgb(255, 255, 255); padding: 16px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px; margin-top: 20px; max-height: 80%; display: flex; flex-direction: column;"]
    [style*="font-size: 18px; line-height: 1.6em; color: rgb(50, 55, 63); font-weight: bold; margin-bottom: 1.2em;"] {
    text-align: center !important;
    vertical-align: middle !important;
    font-weight: 600 !important;
    margin-bottom: 0.6em !important;
}

/* removes gap between edit button and label */
.note-property-box a:empty + a[style*="margin-left: 0.5em"] {
    margin-left: 0 !important;
}

/* new notebook */
[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"] {
    width: 200px !important;
}

[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"]
    input {
    background-color: var(--bg-dark) !important;
    width: auto !important;
    margin-top: 0.33em !important;
}

[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"]
    label {
    font-size: 14px !important;
}

[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"]
    button,
[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"]
    button
    * {
    background-color: var(--bg-dark) !important;
    color: var(--mono-1);
    transition: var(--transition);
}

[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"]
    button:hover,
[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"]
    button:hover
    * {
    background-color: var(--hue-5) !important;
    color: var(--mono-0);
    transition: var(--transition);
}

[style="background-color: rgb(255, 255, 255); padding: 16px; display: inline-block; max-width: 570.882px; box-shadow: rgba(0, 0, 0, 0.5) 6px 6px 20px;"]
    [style*="text-align"] {
    text-align: center !important;
}

.CodeMirror-line > span,
.CodeMirror-line > span * {
    font-family: var(--font-mono) !important;
}

.CodeMirror-selected {
    background-color: #3e4451 !important;
}

.CodeMirror-cursor {
    border-left: 2px solid cornflowerblue !important;
}

.cm-header-1 {
    font-size: 1.5em !important;
}

.cm-header-2 {
    font-size: 1.3em !important;
}

.cm-header-3 {
    font-size: 1.1em !important;
}

.cm-header-4,
.cm-header-5,
.cm-header-6 {
    font-size: 1em !important;
}

.cm-header-1,
.cm-header-2,
.cm-header-3,
.cm-header-4,
.cm-header-5,
.cm-header-6 {
    color: var(--hue-5) !important;
    line-height: 1.5em !important;
}

.cm-search-marker {
    background: var(--hue-6-2) !important;
    color: black !important;
}

.cm-search-marker-selected {
    background: var(--hue-6) !important;
    color: #ffffff !important;
}

.cm-search-marker-scrollbar {
    background: var(--hue-6-2) !important;
}

/* dot + slash in list */
.cm-variable-2,
.cm-variable-3,
.cm-tab + .cm-tab + .cm-keyword {
    color: var(--hue-6-2) !important;
}

/* contents of list */
/* .cm-variable-2 + .cm-property + .cm-variable-2,
.cm-variable-3 + .cm-property + .cm-variable-3,
.cm-variable-2 + .cm-meta + .cm-variable-2,
.cm-variable-3 + .cm-meta + .cm-variable-3,
.cm-tab + .cm-tab + * ~ .cm-keyword {
    color: var(--hue-6-2) !important;
} */

.cm-keyword + .cm-meta + .cm-keyword,
.cm-keyword + .cm-property + .cm-keyword {
    color: var(--hue-6-2) !important;
}

.cm-katex-marker-open,
.cm-katex-marker-close,
.cm-katex-marker-open {
    color: var(--hue-4) !important;
}

.cm-error {
    color: inherit !important;
    background-color: inherit !important;
    border-bottom: 1px dotted #dc322f !important;
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
    background-color: white !important;
    /* The little square between H and V scrollbars */
}

.cm-number {
    color: var(--hue-1) !important;
}

.cm-link-text {
    color: var(--hue-2) !important;
}

span.cm-url {
    color: var(--hue-3) !important;
}

.cm-quote {
    color: var(--hue-4) !important;
}

.cm-negative {
    color: #d44 !important;
}

.cm-positive {
    color: #292 !important;
}

.cm-header,
.cm-strong {
    font-weight: bold !important;
}

.cm-em {
    font-style: italic !important;
}

.cm-link {
    text-decoration: underline !important;
}

.cm-strikethrough {
    text-decoration: line-through !important;
}

.cm-keyword {
    color: var(--hue-3) !important;
}

.cm-image {
    color: var(--hue-4) !important;
}

.cm-def {
    color: var(--hue-2) !important;
}

.cm-operator {
    color: var(--hue-1) !important;
}

.cm-variable {
    color: var(--hue-2) !important;
}

/* checked box */
.cm-property {
    color: var(--hue-2) !important;
}

.cm-comment {
    color: var(--mono-3) !important;
    /* font-style: italic !important; */
}

.cm-string {
    color: var(--hue-4) !important;
}

.cm-tag {
    color: var(--hue-5) !important;
}

.cm-bracket {
    color: var(--mono-1) !important;
}

.cm-strong {
    color: var(--hue-6) !important;
}

.cm-em {
    color: var(--mono-1) !important;
}

/* Default styles for common addons */
div.CodeMirror span.CodeMirror-matchingbracket {
    color: #0b0 !important;
}

div.CodeMirror span.CodeMirror-nonmatchingbracket {
    color: #a22 !important;
}

.CodeMirror-matchingtag {
    background: rgba(255, 150, 0, 0.3) !important;
}

.CodeMirror-activeline-background {
    background: #e8f2ff !important;
}

.cm-searching {
    background-color: #ffa !important;
    background-color: rgba(255, 255, 0, 0.4) !important;
}
